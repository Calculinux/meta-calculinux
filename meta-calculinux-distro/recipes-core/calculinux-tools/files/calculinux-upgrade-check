#!/bin/sh
# calculinux-upgrade-check - Check and upgrade packages after system update
# This script should be run after RAUC system updates to ensure user packages
# remain compatible with the new base system

set -e

COLOR_RED='\033[0;31m'
COLOR_GREEN='\033[0;32m'
COLOR_YELLOW='\033[1;33m'
COLOR_BLUE='\033[0;34m'
COLOR_NC='\033[0m' # No Color

UPGRADE_MODE=0
AUTO_UPGRADE=0

# Parse arguments
while [ $# -gt 0 ]; do
    case "$1" in
        --upgrade|-u)
            UPGRADE_MODE=1
            shift
            ;;
        --auto|-a)
            AUTO_UPGRADE=1
            UPGRADE_MODE=1
            shift
            ;;
        --help|-h)
            echo "Usage: calculinux-upgrade-check [OPTIONS]"
            echo ""
            echo "Check package compatibility after system upgrade"
            echo ""
            echo "Options:"
            echo "  --upgrade, -u    Upgrade outdated packages"
            echo "  --auto, -a       Automatically upgrade without confirmation"
            echo "  --help, -h       Show this help message"
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            exit 1
            ;;
    esac
done

echo "=== Calculinux Package Compatibility Check ==="
echo

# Check if running as root
if [ "$(id -u)" -ne 0 ]; then
    echo "${COLOR_RED}Error: This script must be run as root${COLOR_NC}"
    exit 1
fi

# Check if /usr/local overlay is mounted
if ! mountpoint -q /usr/local 2>/dev/null && [ ! -w /usr/local ]; then
    echo "${COLOR_YELLOW}Warning: /usr/local is not writable${COLOR_NC}"
    echo "User packages may not be accessible or modifiable"
    echo
fi

# Get list of packages installed to /usr/local
echo "Checking user-installed packages in /usr/local..."
PACKAGES=$(opkg status | grep -A5 "^Status:.*installed" | grep "^Package:" | cut -d' ' -f2 | sort | uniq)

if [ -z "$PACKAGES" ]; then
    echo "${COLOR_GREEN}No user packages installed${COLOR_NC}"
    exit 0
fi

PKG_COUNT=$(echo "$PACKAGES" | wc -l)
echo "Found $PKG_COUNT installed package(s)"
echo

# Update package lists
echo "${COLOR_BLUE}Updating package feeds...${COLOR_NC}"
if ! opkg update 2>&1 | grep -v "^Downloading\|^Signature" | grep -E "Updated|Failed"; then
    echo "${COLOR_YELLOW}Warning: Package feed update may have issues${COLOR_NC}"
fi
echo

# Check for upgradable packages
echo "Checking for available updates..."
UPGRADABLE=$(opkg list-upgradable 2>/dev/null || true)

if [ -n "$UPGRADABLE" ]; then
    UPGRADE_COUNT=$(echo "$UPGRADABLE" | wc -l)
    echo "${COLOR_YELLOW}Found $UPGRADE_COUNT package(s) with available updates:${COLOR_NC}"
    echo "$UPGRADABLE" | while read pkg oldver newver; do
        echo "  • $pkg: $oldver → $newver"
    done
    echo
    
    if [ $UPGRADE_MODE -eq 1 ]; then
        if [ $AUTO_UPGRADE -eq 0 ]; then
            echo -n "Upgrade all packages? [y/N] "
            read -r answer
            case "$answer" in
                [Yy]*)
                    ;;
                *)
                    echo "Upgrade cancelled"
                    exit 0
                    ;;
            esac
        fi
        
        echo "${COLOR_BLUE}Upgrading packages...${COLOR_NC}"
        if opkg upgrade; then
            echo "${COLOR_GREEN}✓ All packages upgraded successfully${COLOR_NC}"
        else
            echo "${COLOR_RED}✗ Some packages failed to upgrade${COLOR_NC}"
            echo "You may need to manually reinstall failed packages"
            exit 1
        fi
    else
        echo "To upgrade all packages, run:"
        echo "  ${COLOR_BLUE}calculinux-upgrade-check --upgrade${COLOR_NC}"
        echo "  or: ${COLOR_BLUE}opkg upgrade${COLOR_NC}"
    fi
else
    echo "${COLOR_GREEN}✓ All packages are up to date${COLOR_NC}"
fi
echo

# Check for potential library compatibility issues
echo "Checking for compatibility issues..."
ISSUES=0

for pkg in $PACKAGES; do
    # Check if package binaries can find their libraries
    PKG_FILES=$(opkg files "$pkg" 2>/dev/null | grep -E "^/usr/local/(bin|sbin)/" || true)
    
    for file in $PKG_FILES; do
        if [ -x "$file" ] && [ -f "$file" ]; then
            # Check if binary can find all its dependencies
            if ! ldd "$file" >/dev/null 2>&1; then
                echo "${COLOR_RED}  ✗ $file: Missing library dependencies${COLOR_NC}"
                ISSUES=$((ISSUES + 1))
            fi
        fi
    done
done

echo

if [ $ISSUES -gt 0 ]; then
    echo "${COLOR_RED}Found $ISSUES compatibility issue(s)${COLOR_NC}"
    echo
    echo "Recommended actions:"
    echo "  1. Try upgrading packages: ${COLOR_BLUE}calculinux-upgrade-check --upgrade${COLOR_NC}"
    echo "  2. If issues persist, reinstall affected packages:"
    echo "     ${COLOR_BLUE}opkg remove <package> && opkg install <package>${COLOR_NC}"
    exit 1
else
    echo "${COLOR_GREEN}✓ No compatibility issues detected${COLOR_NC}"
fi

echo
echo "=== Check Complete ==="

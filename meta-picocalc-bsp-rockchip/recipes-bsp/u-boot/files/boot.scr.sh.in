if test "x${{BOOT_ORDER}}" = "x"; then
    echo "Initializing BOOT_ORDER...";
    setenv BOOT_ORDER "A";
    saveenv;
fi;
test -n "${{BOOT_A_LEFT}}" || setenv BOOT_A_LEFT 1;
test "${{BOOT_A_LEFT}}" = 3 && setenv BOOT_A_LEFT 1;
test -n "${{BOOT_B_LEFT}}" || setenv BOOT_B_LEFT 1;
test "${{BOOT_B_LEFT}}" = 3 && setenv BOOT_B_LEFT 1;

setenv rauc_slot;

if test "${{BOOT_ORDER}}" = "A"; then
    echo "Found only slot A, booting....";
    setenv rauc_slot "A";
    part number mmc 0 ROOT_A mmcpart_hex;
elif test "${{BOOT_ORDER}}" = "B"; then
    echo "Found only slot B, booting.... ";
    setenv rauc_slot "B";
    part number mmc 0 ROOT_B mmcpart_hex;
elif test "${{BOOT_ORDER}}" = "A B"; then
    if test ${{BOOT_A_LEFT}} -gt 0; then
        echo "Found valid slot A, ${{BOOT_A_LEFT}} attempts remaining";
        setexpr BOOT_A_LEFT ${{BOOT_A_LEFT}} - 1;
        setenv rauc_slot "A";
        part number mmc 0 ROOT_A mmcpart_hex;
    else
        echo "Found slot B, booting.... ";
        setenv BOOT_ORDER "B";
        setenv rauc_slot "B";
        part number mmc 0 ROOT_B mmcpart_hex;
    fi;
elif test "${{BOOT_ORDER}}" = "B A"; then
    if test ${{BOOT_B_LEFT}} -gt 0; then
        echo "Found valid slot B, ${{BOOT_B_LEFT}} attempts remaining";
        setexpr BOOT_B_LEFT ${{BOOT_B_LEFT}} - 1;
        setenv rauc_slot "B";
        part number mmc 0 ROOT_B mmcpart_hex;
    else
        echo "Found slot A, booting.... ";
        setenv BOOT_ORDER "A";
        setenv rauc_slot "A";
        part number mmc 0 ROOT_A mmcpart_hex;
    fi;
fi;

setexpr mmcpart fmt %d $mmcpart_hex;

if test -n "${{rauc_slot}}"; then
    echo "Saving Environment from bootcmd";
else
    echo "No valid slot found, resetting tries to 1";
    setenv BOOT_A_LEFT 1;
    setenv BOOT_B_LEFT 1;
    setenv BOOT_ORDER "A";
    reset;
fi;

setenv distro_bootpart "${{mmcpart}}"
setenv bootcmd "run mmc_boot;"
saveenv;
saveenv;

setenv fit_image "boot.img"

test -n "${{baudrate}}" || setenv baudrate 1500000;
test -n "${{consoleblank}}" || setenv consoleblank 300;

setenv bootargs "console=${{console}} earlycon=uart8250,mmio32,0xff0a0000,${{baudrate}} console=ttyFIQ0,${{baudrate}} consoleblank=${{consoleblank}} rockchip.fiq_debugger_baudrate=${{baudrate}} ro rootwait root=PARTLABEL=ROOT_${{rauc_slot}} rauc.slot=${{rauc_slot}} fsck.mode=skip noinitrd init=/sbin/preinit regulator.debug=1";
echo Setting bootargs to ${{bootargs}};

echo Loading FIT image <${{fit_image}}> from ${{devtype}} ${{devnum}}:${{mmcpart}};
load ${{devtype}} ${{devnum}}:${{mmcpart}} ${{ramdisk_addr_r}} /boot/${{fit_image}};

echo Booting from address <${{ramdisk_addr_r}}>;
bootm ${{ramdisk_addr_r}}
